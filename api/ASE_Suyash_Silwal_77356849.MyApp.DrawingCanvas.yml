### YamlMime:ManagedReference
items:
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  commentId: T:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  id: DrawingCanvas
  parent: ASE_Suyash_Silwal_77356849.MyApp
  children:
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.#ctor
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Circle(System.Int32,System.Boolean)
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Clear
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.DrawTo(System.Int32,System.Int32)
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Filled
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.GetGraphics
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.MoveTo(System.Int32,System.Int32)
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenColour
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenSize
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Rect(System.Int32,System.Int32,System.Boolean)
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Reset
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Set(System.Int32,System.Int32)
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetCanvas(System.Drawing.Bitmap,System.Drawing.Graphics)
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetColour(System.Int32,System.Int32,System.Int32)
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Tri(System.Int32,System.Int32)
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.WriteText(System.String)
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.XSIDE
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Xpos
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.YSIDE
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Ypos
  - ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.getBitmap
  langs:
  - csharp
  - vb
  name: DrawingCanvas
  nameWithType: DrawingCanvas
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  type: Class
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: DrawingCanvas
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 20
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Implementation of the <xref href="BOOSE.ICanvas" data-throw-if-not-resolved="false"></xref> interface for performing drawing operations on a bitmap canvas.
  remarks: >-
    This class provides methods for drawing various shapes (lines, circles, rectangles, triangles) and text on a canvas

    represented by a bitmap. It supports operations such as setting the pen color and size, moving the pen to a new

    position, and resetting the canvas to its initial state. The canvas is defined by a width (XSIDE) and height (YSIDE),

    which are used to constrain drawing operations within the canvas boundaries. The class utilizes the <xref href="System.Drawing.Graphics" data-throw-if-not-resolved="false"></xref>

    object to perform rendering on the canvas.
  example: []
  syntax:
    content: 'public class DrawingCanvas : ICanvas'
    content.vb: Public Class DrawingCanvas Implements ICanvas
  inheritance:
  - System.Object
  implements:
  - BOOSE.ICanvas
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.XSIDE
  commentId: P:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.XSIDE
  id: XSIDE
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: XSIDE
  nameWithType: DrawingCanvas.XSIDE
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.XSIDE
  type: Property
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: XSIDE
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 55
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: The width of the canvas.
  remarks: >-
    This defines the horizontal dimension of the canvas. It is used to validate the X positions during drawing operations.

    The default value is 640 pixels.
  example: []
  syntax:
    content: public int XSIDE { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property XSIDE As Integer
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.XSIDE*
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.YSIDE
  commentId: P:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.YSIDE
  id: YSIDE
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: YSIDE
  nameWithType: DrawingCanvas.YSIDE
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.YSIDE
  type: Property
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: YSIDE
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 64
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: The height of the canvas.
  remarks: >-
    This defines the vertical dimension of the canvas. It is used to validate the Y positions during drawing operations.

    The default value is 480 pixels.
  example: []
  syntax:
    content: public int YSIDE { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property YSIDE As Integer
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.YSIDE*
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.#ctor
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.#ctor
  id: '#ctor'
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: DrawingCanvas()
  nameWithType: DrawingCanvas.DrawingCanvas()
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.DrawingCanvas()
  type: Constructor
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: .ctor
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 130
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Initializes a new instance of the <xref href="ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas" data-throw-if-not-resolved="false"></xref> class with default canvas size.
  remarks: >-
    This constructor sets the canvas size to the default values defined by the constants `XSIDE` and `YSIDE`.

    It also initializes the pen size to 1 and sets the pen color to black (RGB: 0, 0, 0).
  example: []
  syntax:
    content: public DrawingCanvas()
    content.vb: Public Sub New()
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.#ctor*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: Thrown if the canvas size cannot be set properly or if invalid values are provided for pen size or color.
  nameWithType.vb: DrawingCanvas.New()
  fullName.vb: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.New()
  name.vb: New()
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Xpos
  commentId: P:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Xpos
  id: Xpos
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: Xpos
  nameWithType: DrawingCanvas.Xpos
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Xpos
  type: Property
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: Xpos
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 161
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Gets or sets the X position for the next drawing operation.
  remarks: >-
    This property controls the X coordinate of the pen position, which determines

    the vertical position for subsequent drawing operations on the canvas.
  example: []
  syntax:
    content: public int Xpos { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Xpos As Integer
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Xpos*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: Thrown if the Y position is outside the allowed canvas boundaries (less than 0 or greater than the canvas height).
  implements:
  - BOOSE.ICanvas.Xpos
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Filled
  commentId: P:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Filled
  id: Filled
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: Filled
  nameWithType: DrawingCanvas.Filled
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Filled
  type: Property
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: Filled
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 196
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  syntax:
    content: public bool Filled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Filled As Boolean
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Filled*
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenSize
  commentId: P:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenSize
  id: PenSize
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: PenSize
  nameWithType: DrawingCanvas.PenSize
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenSize
  type: Property
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: PenSize
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 222
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Gets or sets the pen size, which determines the thickness of the lines drawn.
  example: []
  syntax:
    content: public int PenSize { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: >-
        The pen size, which is a positive integer. It determines how thick the lines will appear on the canvas.

        A value greater than zero is required. If the value is zero or negative, an exception will be thrown.
    content.vb: Public Property PenSize As Integer
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenSize*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: Thrown when the pen size is set to a value less than or equal to zero.
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Ypos
  commentId: P:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Ypos
  id: Ypos
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: Ypos
  nameWithType: DrawingCanvas.Ypos
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Ypos
  type: Property
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: Ypos
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 268
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Gets or sets the Y position for the next drawing operation.
  remarks: >-
    This property controls the Y coordinate of the pen position, which determines

    the vertical position for subsequent drawing operations on the canvas.
  example: []
  syntax:
    content: public int Ypos { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Ypos As Integer
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Ypos*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: Thrown if the Y position is outside the allowed canvas boundaries (less than 0 or greater than the canvas height).
  implements:
  - BOOSE.ICanvas.Ypos
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenColour
  commentId: P:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenColour
  id: PenColour
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: PenColour
  nameWithType: DrawingCanvas.PenColour
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenColour
  type: Property
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: PenColour
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 310
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Gets or sets the pen color for the next drawing operation.
  remarks: >-
    This property allows you to retrieve or modify the current pen color used for drawing operations.

    The color is represented as a `Color` object, and it determines the color of lines, shapes,

    and other drawn elements on the canvas.
  example: []
  syntax:
    content: public object PenColour { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property PenColour As Object
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenColour*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: Thrown if the provided value for the pen color is not a valid `Color` object.
  implements:
  - BOOSE.ICanvas.PenColour
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Set(System.Int32,System.Int32)
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Set(System.Int32,System.Int32)
  id: Set(System.Int32,System.Int32)
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: Set(int, int)
  nameWithType: DrawingCanvas.Set(int, int)
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Set(int, int)
  type: Method
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: Set
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 350
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Sets the canvas size and initializes the drawing surface.
  remarks: >-
    This method initializes the canvas with the specified width and height. It also sets the starting

    position of the drawing cursor (xPos, yPos) to the top-left corner (0, 0). After setting the canvas size,

    it creates a new `Bitmap` object for drawing and a corresponding `Graphics` object. Additionally,

    it clears the canvas to prepare for drawing.
  example: []
  syntax:
    content: public void Set(int xsize, int ysize)
    parameters:
    - id: xsize
      type: System.Int32
      description: The width of the canvas, in pixels.
    - id: ysize
      type: System.Int32
      description: The height of the canvas, in pixels.
    content.vb: Public Sub [Set](xsize As Integer, ysize As Integer)
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Set*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: >-
      Thrown if the width or height of the canvas is invalid (e.g., negative or zero), or if there is an error

      during the initialization of the drawing surface.
  implements:
  - BOOSE.ICanvas.Set(System.Int32,System.Int32)
  nameWithType.vb: DrawingCanvas.Set(Integer, Integer)
  fullName.vb: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Set(Integer, Integer)
  name.vb: Set(Integer, Integer)
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Circle(System.Int32,System.Boolean)
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Circle(System.Int32,System.Boolean)
  id: Circle(System.Int32,System.Boolean)
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: Circle(int, bool)
  nameWithType: DrawingCanvas.Circle(int, bool)
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Circle(int, bool)
  type: Method
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: Circle
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 418
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: >-
    Attempts to draw a circle at the current pen position, either filled or outlined, depending on the specified parameter.

    Ensures the radius is valid and checks if the circle fits within the canvas boundaries.

    If the radius is invalid or the circle exceeds the canvas size, a warning is logged, and drawing is skipped.
  remarks: >-
    The method ensures that drawing operations do not disrupt the program's flow. If the circle cannot

    be drawn due to invalid input or canvas boundary constraints, the method logs a warning and continues execution.
  example:
  - >-
    The following example demonstrates how to draw a filled circle with a radius of 50:

    <pre><code class="lang-csharp">Circle(50, true);</code></pre>
  syntax:
    content: public void Circle(int radius, bool filled)
    parameters:
    - id: radius
      type: System.Int32
      description: >-
        The radius of the circle. Must be a positive integer greater than zero.

        If the radius is invalid, the circle will not be drawn, and a warning will be logged.
    - id: filled
      type: System.Boolean
      description: >-
        A boolean indicating whether the circle should be filled or outlined:

        <ul><li><code>true</code>: Draws a filled circle.</li><li><code>false</code>: Draws an outlined circle.</li></ul>
    content.vb: Public Sub Circle(radius As Integer, filled As Boolean)
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Circle*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: >-
      This exception is caught internally to prevent program termination. It is used to log errors

      for invalid radius values or when the circle exceeds canvas dimensions.
  implements:
  - BOOSE.ICanvas.Circle(System.Int32,System.Boolean)
  nameWithType.vb: DrawingCanvas.Circle(Integer, Boolean)
  fullName.vb: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Circle(Integer, Boolean)
  name.vb: Circle(Integer, Boolean)
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Clear
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Clear
  id: Clear
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: DrawingCanvas.Clear()
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Clear()
  type: Method
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: Clear
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 470
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Clears the canvas by filling it with a default background color.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Clear*
  implements:
  - BOOSE.ICanvas.Clear
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.DrawTo(System.Int32,System.Int32)
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.DrawTo(System.Int32,System.Int32)
  id: DrawTo(System.Int32,System.Int32)
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: DrawTo(int, int)
  nameWithType: DrawingCanvas.DrawTo(int, int)
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.DrawTo(int, int)
  type: Method
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: DrawTo
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 500
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Draws a line from the current pen position to a specified endpoint on the canvas.
  remarks: >-
    The method updates the pen's current position to the specified endpoint after the line is drawn.

    Subsequent drawing operations will use the new position as the starting point.

    If the line cannot be drawn due to an uninitialized graphics context, the method logs a warning but does not interrupt execution.
  example:
  - >-
    The following example demonstrates how to draw a line from the current pen position to the point (100, 50):

    <pre><code class="lang-csharp">DrawTo(100, 50);</code></pre>
  syntax:
    content: public void DrawTo(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: The X coordinate of the endpoint of the line. This value represents the position along the horizontal axis.
    - id: y
      type: System.Int32
      description: The Y coordinate of the endpoint of the line. This value represents the position along the vertical axis.
    content.vb: Public Sub DrawTo(x As Integer, y As Integer)
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.DrawTo*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: Thrown if the graphics context is not initialized or if the specified coordinates are outside the canvas boundaries.
  implements:
  - BOOSE.ICanvas.DrawTo(System.Int32,System.Int32)
  nameWithType.vb: DrawingCanvas.DrawTo(Integer, Integer)
  fullName.vb: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.DrawTo(Integer, Integer)
  name.vb: DrawTo(Integer, Integer)
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.getBitmap
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.getBitmap
  id: getBitmap
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: getBitmap()
  nameWithType: DrawingCanvas.getBitmap()
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.getBitmap()
  type: Method
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: getBitmap
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 548
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Returns the Bitmap object representing the current drawing on the canvas.
  remarks: >-
    The Bitmap object returned by this method reflects the current state of the canvas,

    including any drawings made with the pen. If no drawing has been done, it will return

    an empty or unmodified bitmap.
  example: []
  syntax:
    content: public object getBitmap()
    return:
      type: System.Object
      description: >-
        The Bitmap object associated with the current canvas. This object contains the pixel data

        for the current drawing and can be used to save or manipulate the canvas image.
    content.vb: Public Function getBitmap() As Object
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.getBitmap*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: Thrown if the Bitmap object has not been initialized or there is an issue with accessing it.
  implements:
  - BOOSE.ICanvas.getBitmap
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.MoveTo(System.Int32,System.Int32)
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.MoveTo(System.Int32,System.Int32)
  id: MoveTo(System.Int32,System.Int32)
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: MoveTo(int, int)
  nameWithType: DrawingCanvas.MoveTo(int, int)
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.MoveTo(int, int)
  type: Method
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: MoveTo
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 593
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Moves the drawing cursor to a specified position on the canvas without drawing any lines.
  remarks: >-
    This method updates the current position of the pen to the specified coordinates `(x, y)` without performing any drawing operations.

    It ensures that subsequent drawing operations begin from the new cursor position.

    If the specified coordinates are outside the canvas boundaries, the position is not updated, and a warning is logged.
  example:
  - >-
    The following example demonstrates how to move the pen to position (50, 100) without drawing:

    <pre><code class="lang-csharp">MoveTo(50, 100);</code></pre>
  syntax:
    content: public void MoveTo(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: >-
        The X coordinate to move the cursor to. Represents the horizontal position on the canvas.

        Must be within the canvas boundaries.
    - id: y
      type: System.Int32
      description: >-
        The Y coordinate to move the cursor to. Represents the vertical position on the canvas.

        Must be within the canvas boundaries.
    content.vb: Public Sub MoveTo(x As Integer, y As Integer)
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.MoveTo*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: Thrown if the specified coordinates are outside the canvas boundaries defined by `XSIDE` and `YSIDE`.
  implements:
  - BOOSE.ICanvas.MoveTo(System.Int32,System.Int32)
  nameWithType.vb: DrawingCanvas.MoveTo(Integer, Integer)
  fullName.vb: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.MoveTo(Integer, Integer)
  name.vb: MoveTo(Integer, Integer)
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Rect(System.Int32,System.Int32,System.Boolean)
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Rect(System.Int32,System.Int32,System.Boolean)
  id: Rect(System.Int32,System.Int32,System.Boolean)
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: Rect(int, int, bool)
  nameWithType: DrawingCanvas.Rect(int, int, bool)
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Rect(int, int, bool)
  type: Method
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: Rect
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 648
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Draws a rectangle at the current cursor position with the specified dimensions and style (filled or outline).
  remarks: >-
    The rectangle is drawn starting from the current cursor position `(xPos, yPos)`.

    If the rectangle's dimensions are invalid or it exceeds the canvas boundaries, it will not be drawn,

    and a warning will be logged. This ensures the program continues execution without interruption.
  example:
  - >-
    The following example demonstrates how to draw a filled rectangle with a width of 100 and height of 50:

    <pre><code class="lang-csharp">Rect(100, 50, true);</code></pre>
  syntax:
    content: public void Rect(int width, int height, bool filled)
    parameters:
    - id: width
      type: System.Int32
      description: >-
        The width of the rectangle. Must be a positive integer greater than zero.

        If the value is invalid, the rectangle will not be drawn, and a warning will be logged.
    - id: height
      type: System.Int32
      description: >-
        The height of the rectangle. Must be a positive integer greater than zero.

        If the value is invalid, the rectangle will not be drawn, and a warning will be logged.
    - id: filled
      type: System.Boolean
      description: >-
        A boolean indicating whether the rectangle should be filled or outlined:

        <ul><li><code>true</code>: Draws a filled rectangle.</li><li><code>false</code>: Draws an outlined rectangle.</li></ul>
    content.vb: Public Sub Rect(width As Integer, height As Integer, filled As Boolean)
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Rect*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: Thrown if the specified rectangle dimensions are invalid or if the rectangle exceeds canvas boundaries.
  implements:
  - BOOSE.ICanvas.Rect(System.Int32,System.Int32,System.Boolean)
  nameWithType.vb: DrawingCanvas.Rect(Integer, Integer, Boolean)
  fullName.vb: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Rect(Integer, Integer, Boolean)
  name.vb: Rect(Integer, Integer, Boolean)
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Reset
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Reset
  id: Reset
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: DrawingCanvas.Reset()
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Reset()
  type: Method
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: Reset
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 710
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Resets the canvas to its initial state by resetting the drawing cursor position to the top-left corner.
  remarks: >-
    This method resets the drawing cursor (pen position) to the initial position at (0, 0).

    Any previous drawing operations will not be affected, but the next drawing operations

    will begin from the top-left corner of the canvas.
  example:
  - >-
    The following example demonstrates how to reset the canvas and start fresh with drawing:

    <pre><code class="lang-csharp">Reset(); // Resets the drawing cursor to the top-left corner</code></pre>
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Reset*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: >-
      Thrown if there is an issue with resetting the canvas. For example, if the canvas is in an

      invalid state or has not been properly initialized, an exception could be thrown.
  implements:
  - BOOSE.ICanvas.Reset
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetCanvas(System.Drawing.Bitmap,System.Drawing.Graphics)
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetCanvas(System.Drawing.Bitmap,System.Drawing.Graphics)
  id: SetCanvas(System.Drawing.Bitmap,System.Drawing.Graphics)
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: SetCanvas(Bitmap, Graphics)
  nameWithType: DrawingCanvas.SetCanvas(Bitmap, Graphics)
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetCanvas(System.Drawing.Bitmap, System.Drawing.Graphics)
  type: Method
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: SetCanvas
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 759
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: >-
    Sets the canvas by assigning the provided <xref href="System.Drawing.Bitmap" data-throw-if-not-resolved="false"></xref> and <xref href="System.Drawing.Graphics" data-throw-if-not-resolved="false"></xref> objects

    for drawing operations.
  remarks: >-
    This method initializes or reinitializes the internal canvas by setting the Bitmap and Graphics objects.

    After setting the canvas, it clears the drawing surface with a white background to provide a fresh start.

    If you need a specific background color, you can modify the method to accept a color parameter or change the

    default behavior.
  example:
  - >-
    The following example demonstrates how to initialize a canvas with a 500x500 Bitmap:

    <pre><code class="lang-csharp">Bitmap bitmap = new Bitmap(500, 500);

    Graphics graphics = Graphics.FromImage(bitmap);

    SetCanvas(bitmap, graphics);</code></pre>
  syntax:
    content: public void SetCanvas(Bitmap newBitmap, Graphics newGraphics)
    parameters:
    - id: newBitmap
      type: System.Drawing.Bitmap
      description: >-
        The <xref href="System.Drawing.Bitmap" data-throw-if-not-resolved="false"></xref> object to be used as the canvas surface.

        This object holds the pixel data for the canvas.
    - id: newGraphics
      type: System.Drawing.Graphics
      description: >-
        The <xref href="System.Drawing.Graphics" data-throw-if-not-resolved="false"></xref> object to be used for rendering on the canvas.

        This object provides drawing capabilities like shapes, text, and images.
    content.vb: Public Sub SetCanvas(newBitmap As Bitmap, newGraphics As Graphics)
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetCanvas*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: Thrown if either <code class="paramref">newBitmap</code> or <code class="paramref">newGraphics</code> is <code>null</code>.
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.GetGraphics
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.GetGraphics
  id: GetGraphics
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: GetGraphics()
  nameWithType: DrawingCanvas.GetGraphics()
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.GetGraphics()
  type: Method
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: GetGraphics
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 818
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Returns the current Graphics object used for drawing on the canvas.
  remarks: >-
    This method allows access to the internal <xref href="System.Drawing.Graphics" data-throw-if-not-resolved="false"></xref> object used for drawing on the canvas.

    If the graphics object has not been initialized (i.e., it is null), a <xref href="BOOSE.CanvasException" data-throw-if-not-resolved="false"></xref> is thrown,

    indicating that the drawing cannot proceed.
  example:
  - >-
    The following example demonstrates how to retrieve the current Graphics object and

    handle any potential exceptions if the graphics object is not initialized:

    <pre><code class="lang-csharp">try

    {
        Graphics currentGraphics = GetGraphics();
        // Use currentGraphics for drawing operations, if not null
    }

    catch (CanvasException ex)

    {
        Console.WriteLine($"Error: {ex.Message}"); // Handle the error (e.g., log it)
    }</code></pre>
  syntax:
    content: public Graphics GetGraphics()
    return:
      type: System.Drawing.Graphics
      description: The Graphics object associated with the current canvas.
    content.vb: Public Function GetGraphics() As Graphics
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.GetGraphics*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: >-
      Thrown if the graphics object is not initialized or is null. This exception is thrown

      when there is an attempt to retrieve the <xref href="System.Drawing.Graphics" data-throw-if-not-resolved="false"></xref> object before it is set.
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetColour(System.Int32,System.Int32,System.Int32)
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetColour(System.Int32,System.Int32,System.Int32)
  id: SetColour(System.Int32,System.Int32,System.Int32)
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: SetColour(int, int, int)
  nameWithType: DrawingCanvas.SetColour(int, int, int)
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetColour(int, int, int)
  type: Method
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: SetColour
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 861
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Sets the pen color using specified RGB values.
  remarks: >-
    This method allows precise control of the pen's color by specifying the intensity of

    red, green, and blue components. If an invalid value is provided, an exception is thrown.

    The pen is updated with the new color and retains the existing pen size.
  example:
  - >-
    The following example demonstrates how to set the pen color to blue:

    <pre><code class="lang-csharp">SetColour(0, 0, 255); // Sets the pen color to pure blue</code></pre>
  syntax:
    content: public void SetColour(int red, int green, int blue)
    parameters:
    - id: red
      type: System.Int32
      description: The red component of the color, ranging from 0 to 255.
    - id: green
      type: System.Int32
      description: The green component of the color, ranging from 0 to 255.
    - id: blue
      type: System.Int32
      description: The blue component of the color, ranging from 0 to 255.
    content.vb: Public Sub SetColour(red As Integer, green As Integer, blue As Integer)
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetColour*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: Thrown when any of the RGB components are outside the valid range of 0 to 255.
  implements:
  - BOOSE.ICanvas.SetColour(System.Int32,System.Int32,System.Int32)
  nameWithType.vb: DrawingCanvas.SetColour(Integer, Integer, Integer)
  fullName.vb: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetColour(Integer, Integer, Integer)
  name.vb: SetColour(Integer, Integer, Integer)
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Tri(System.Int32,System.Int32)
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Tri(System.Int32,System.Int32)
  id: Tri(System.Int32,System.Int32)
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: Tri(int, int)
  nameWithType: DrawingCanvas.Tri(int, int)
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Tri(int, int)
  type: Method
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: Tri
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 902
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Draws a triangle within the specified bounding rectangle, ensuring it fits within the canvas boundaries.
  remarks: >-
    The method validates the triangle's width and height to ensure they are positive. It then checks if the triangle's

    bounding points fit within the canvas boundaries. If any point exceeds the canvas size, a CanvasException is thrown.
  example:
  - >-
    The following example demonstrates how to draw a triangle with width 100 and height 50:

    <pre><code class="lang-csharp">Tri(100, 50); // Draws a triangle with base 100 and height 50</code></pre>
  syntax:
    content: public void Tri(int width, int height)
    parameters:
    - id: width
      type: System.Int32
      description: The width of the bounding rectangle, which defines the base of the triangle.
    - id: height
      type: System.Int32
      description: The height of the bounding rectangle, which defines the height of the triangle.
    content.vb: Public Sub Tri(width As Integer, height As Integer)
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Tri*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: Thrown if the triangle dimensions are invalid, exceed canvas boundaries, or are non-positive.
  implements:
  - BOOSE.ICanvas.Tri(System.Int32,System.Int32)
  nameWithType.vb: DrawingCanvas.Tri(Integer, Integer)
  fullName.vb: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Tri(Integer, Integer)
  name.vb: Tri(Integer, Integer)
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.WriteText(System.String)
  commentId: M:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.WriteText(System.String)
  id: WriteText(System.String)
  parent: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  langs:
  - csharp
  - vb
  name: WriteText(string)
  nameWithType: DrawingCanvas.WriteText(string)
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.WriteText(string)
  type: Method
  source:
    remote:
      path: ASE_Suyash_Silwal_77356849/ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-suyash358.git
    id: WriteText
    path: ASE_Suyash_Silwal_77356849/MyApp/DrawingCanvas.cs
    startLine: 967
  assemblies:
  - ASE_Suyash_Silwal_77356849
  namespace: ASE_Suyash_Silwal_77356849.MyApp
  summary: Draws the specified text at the current cursor position on the canvas.
  remarks: >-
    The method checks whether the input text is valid (not null, empty, or whitespace). If the text exceeds the canvas boundaries,

    a <xref href="BOOSE.CanvasException" data-throw-if-not-resolved="false"></xref> is thrown. The method also ensures the graphics object is initialized before attempting

    to draw the text.
  example:
  - >-
    The following example demonstrates how to draw text at the current position:

    <pre><code class="lang-csharp">WriteText("Hello, Canvas!"); // Draws the text "Hello, Canvas!" at the current cursor position</code></pre>
  syntax:
    content: public void WriteText(string text)
    parameters:
    - id: text
      type: System.String
      description: The text to be drawn on the canvas.
    content.vb: Public Sub WriteText(text As String)
  overload: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.WriteText*
  exceptions:
  - type: BOOSE.CanvasException
    commentId: T:BOOSE.CanvasException
    description: Thrown if the text is null, empty, or exceeds canvas boundaries. It is also thrown if the graphics object is not initialized.
  implements:
  - BOOSE.ICanvas.WriteText(System.String)
  nameWithType.vb: DrawingCanvas.WriteText(String)
  fullName.vb: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.WriteText(String)
  name.vb: WriteText(String)
references:
- uid: BOOSE.ICanvas
  commentId: T:BOOSE.ICanvas
  parent: BOOSE
  isExternal: true
  name: ICanvas
  nameWithType: ICanvas
  fullName: BOOSE.ICanvas
- uid: System.Drawing.Graphics
  commentId: T:System.Drawing.Graphics
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.graphics
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: ASE_Suyash_Silwal_77356849.MyApp
  commentId: N:ASE_Suyash_Silwal_77356849.MyApp
  href: ASE_Suyash_Silwal_77356849.html
  name: ASE_Suyash_Silwal_77356849.MyApp
  nameWithType: ASE_Suyash_Silwal_77356849.MyApp
  fullName: ASE_Suyash_Silwal_77356849.MyApp
  spec.csharp:
  - uid: ASE_Suyash_Silwal_77356849
    name: ASE_Suyash_Silwal_77356849
    href: ASE_Suyash_Silwal_77356849.html
  - name: .
  - uid: ASE_Suyash_Silwal_77356849.MyApp
    name: MyApp
    href: ASE_Suyash_Silwal_77356849.MyApp.html
  spec.vb:
  - uid: ASE_Suyash_Silwal_77356849
    name: ASE_Suyash_Silwal_77356849
    href: ASE_Suyash_Silwal_77356849.html
  - name: .
  - uid: ASE_Suyash_Silwal_77356849.MyApp
    name: MyApp
    href: ASE_Suyash_Silwal_77356849.MyApp.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: BOOSE
  commentId: N:BOOSE
  isExternal: true
  name: BOOSE
  nameWithType: BOOSE
  fullName: BOOSE
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.XSIDE*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.XSIDE
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_XSIDE
  name: XSIDE
  nameWithType: DrawingCanvas.XSIDE
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.XSIDE
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.YSIDE*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.YSIDE
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_YSIDE
  name: YSIDE
  nameWithType: DrawingCanvas.YSIDE
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.YSIDE
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  commentId: T:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
  parent: ASE_Suyash_Silwal_77356849.MyApp
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html
  name: DrawingCanvas
  nameWithType: DrawingCanvas
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas
- uid: BOOSE.CanvasException
  commentId: T:BOOSE.CanvasException
  parent: BOOSE
  isExternal: true
  name: CanvasException
  nameWithType: CanvasException
  fullName: BOOSE.CanvasException
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.#ctor*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.#ctor
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas__ctor
  name: DrawingCanvas
  nameWithType: DrawingCanvas.DrawingCanvas
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.DrawingCanvas
  nameWithType.vb: DrawingCanvas.New
  fullName.vb: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.New
  name.vb: New
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Xpos*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Xpos
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_Xpos
  name: Xpos
  nameWithType: DrawingCanvas.Xpos
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Xpos
- uid: BOOSE.ICanvas.Xpos
  commentId: P:BOOSE.ICanvas.Xpos
  parent: BOOSE.ICanvas
  isExternal: true
  name: Xpos
  nameWithType: ICanvas.Xpos
  fullName: BOOSE.ICanvas.Xpos
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Filled*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Filled
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_Filled
  name: Filled
  nameWithType: DrawingCanvas.Filled
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Filled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenSize*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenSize
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_PenSize
  name: PenSize
  nameWithType: DrawingCanvas.PenSize
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenSize
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Ypos*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Ypos
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_Ypos
  name: Ypos
  nameWithType: DrawingCanvas.Ypos
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Ypos
- uid: BOOSE.ICanvas.Ypos
  commentId: P:BOOSE.ICanvas.Ypos
  parent: BOOSE.ICanvas
  isExternal: true
  name: Ypos
  nameWithType: ICanvas.Ypos
  fullName: BOOSE.ICanvas.Ypos
- uid: System.InvalidCastException
  commentId: T:System.InvalidCastException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidcastexception
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenColour*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenColour
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_PenColour
  name: PenColour
  nameWithType: DrawingCanvas.PenColour
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.PenColour
- uid: BOOSE.ICanvas.PenColour
  commentId: P:BOOSE.ICanvas.PenColour
  parent: BOOSE.ICanvas
  isExternal: true
  name: PenColour
  nameWithType: ICanvas.PenColour
  fullName: BOOSE.ICanvas.PenColour
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Set*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Set
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_Set_System_Int32_System_Int32_
  name: Set
  nameWithType: DrawingCanvas.Set
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Set
- uid: BOOSE.ICanvas.Set(System.Int32,System.Int32)
  commentId: M:BOOSE.ICanvas.Set(System.Int32,System.Int32)
  parent: BOOSE.ICanvas
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Set(int, int)
  nameWithType: ICanvas.Set(int, int)
  fullName: BOOSE.ICanvas.Set(int, int)
  nameWithType.vb: ICanvas.Set(Integer, Integer)
  fullName.vb: BOOSE.ICanvas.Set(Integer, Integer)
  name.vb: Set(Integer, Integer)
  spec.csharp:
  - uid: BOOSE.ICanvas.Set(System.Int32,System.Int32)
    name: Set
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: BOOSE.ICanvas.Set(System.Int32,System.Int32)
    name: Set
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Circle*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Circle
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_Circle_System_Int32_System_Boolean_
  name: Circle
  nameWithType: DrawingCanvas.Circle
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Circle
- uid: BOOSE.ICanvas.Circle(System.Int32,System.Boolean)
  commentId: M:BOOSE.ICanvas.Circle(System.Int32,System.Boolean)
  parent: BOOSE.ICanvas
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Circle(int, bool)
  nameWithType: ICanvas.Circle(int, bool)
  fullName: BOOSE.ICanvas.Circle(int, bool)
  nameWithType.vb: ICanvas.Circle(Integer, Boolean)
  fullName.vb: BOOSE.ICanvas.Circle(Integer, Boolean)
  name.vb: Circle(Integer, Boolean)
  spec.csharp:
  - uid: BOOSE.ICanvas.Circle(System.Int32,System.Boolean)
    name: Circle
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: BOOSE.ICanvas.Circle(System.Int32,System.Boolean)
    name: Circle
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Clear*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Clear
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_Clear
  name: Clear
  nameWithType: DrawingCanvas.Clear
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Clear
- uid: BOOSE.ICanvas.Clear
  commentId: M:BOOSE.ICanvas.Clear
  parent: BOOSE.ICanvas
  isExternal: true
  name: Clear()
  nameWithType: ICanvas.Clear()
  fullName: BOOSE.ICanvas.Clear()
  spec.csharp:
  - uid: BOOSE.ICanvas.Clear
    name: Clear
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: BOOSE.ICanvas.Clear
    name: Clear
    isExternal: true
  - name: (
  - name: )
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.DrawTo*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.DrawTo
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_DrawTo_System_Int32_System_Int32_
  name: DrawTo
  nameWithType: DrawingCanvas.DrawTo
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.DrawTo
- uid: BOOSE.ICanvas.DrawTo(System.Int32,System.Int32)
  commentId: M:BOOSE.ICanvas.DrawTo(System.Int32,System.Int32)
  parent: BOOSE.ICanvas
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: DrawTo(int, int)
  nameWithType: ICanvas.DrawTo(int, int)
  fullName: BOOSE.ICanvas.DrawTo(int, int)
  nameWithType.vb: ICanvas.DrawTo(Integer, Integer)
  fullName.vb: BOOSE.ICanvas.DrawTo(Integer, Integer)
  name.vb: DrawTo(Integer, Integer)
  spec.csharp:
  - uid: BOOSE.ICanvas.DrawTo(System.Int32,System.Int32)
    name: DrawTo
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: BOOSE.ICanvas.DrawTo(System.Int32,System.Int32)
    name: DrawTo
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.getBitmap*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.getBitmap
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_getBitmap
  name: getBitmap
  nameWithType: DrawingCanvas.getBitmap
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.getBitmap
- uid: BOOSE.ICanvas.getBitmap
  commentId: M:BOOSE.ICanvas.getBitmap
  parent: BOOSE.ICanvas
  isExternal: true
  name: getBitmap()
  nameWithType: ICanvas.getBitmap()
  fullName: BOOSE.ICanvas.getBitmap()
  spec.csharp:
  - uid: BOOSE.ICanvas.getBitmap
    name: getBitmap
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: BOOSE.ICanvas.getBitmap
    name: getBitmap
    isExternal: true
  - name: (
  - name: )
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.MoveTo*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.MoveTo
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_MoveTo_System_Int32_System_Int32_
  name: MoveTo
  nameWithType: DrawingCanvas.MoveTo
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.MoveTo
- uid: BOOSE.ICanvas.MoveTo(System.Int32,System.Int32)
  commentId: M:BOOSE.ICanvas.MoveTo(System.Int32,System.Int32)
  parent: BOOSE.ICanvas
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: MoveTo(int, int)
  nameWithType: ICanvas.MoveTo(int, int)
  fullName: BOOSE.ICanvas.MoveTo(int, int)
  nameWithType.vb: ICanvas.MoveTo(Integer, Integer)
  fullName.vb: BOOSE.ICanvas.MoveTo(Integer, Integer)
  name.vb: MoveTo(Integer, Integer)
  spec.csharp:
  - uid: BOOSE.ICanvas.MoveTo(System.Int32,System.Int32)
    name: MoveTo
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: BOOSE.ICanvas.MoveTo(System.Int32,System.Int32)
    name: MoveTo
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Rect*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Rect
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_Rect_System_Int32_System_Int32_System_Boolean_
  name: Rect
  nameWithType: DrawingCanvas.Rect
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Rect
- uid: BOOSE.ICanvas.Rect(System.Int32,System.Int32,System.Boolean)
  commentId: M:BOOSE.ICanvas.Rect(System.Int32,System.Int32,System.Boolean)
  parent: BOOSE.ICanvas
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Rect(int, int, bool)
  nameWithType: ICanvas.Rect(int, int, bool)
  fullName: BOOSE.ICanvas.Rect(int, int, bool)
  nameWithType.vb: ICanvas.Rect(Integer, Integer, Boolean)
  fullName.vb: BOOSE.ICanvas.Rect(Integer, Integer, Boolean)
  name.vb: Rect(Integer, Integer, Boolean)
  spec.csharp:
  - uid: BOOSE.ICanvas.Rect(System.Int32,System.Int32,System.Boolean)
    name: Rect
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: BOOSE.ICanvas.Rect(System.Int32,System.Int32,System.Boolean)
    name: Rect
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Reset*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Reset
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_Reset
  name: Reset
  nameWithType: DrawingCanvas.Reset
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Reset
- uid: BOOSE.ICanvas.Reset
  commentId: M:BOOSE.ICanvas.Reset
  parent: BOOSE.ICanvas
  isExternal: true
  name: Reset()
  nameWithType: ICanvas.Reset()
  fullName: BOOSE.ICanvas.Reset()
  spec.csharp:
  - uid: BOOSE.ICanvas.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: BOOSE.ICanvas.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
- uid: System.Drawing.Bitmap
  commentId: T:System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.bitmap
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetCanvas*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetCanvas
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_SetCanvas_System_Drawing_Bitmap_System_Drawing_Graphics_
  name: SetCanvas
  nameWithType: DrawingCanvas.SetCanvas
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetCanvas
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.GetGraphics*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.GetGraphics
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_GetGraphics
  name: GetGraphics
  nameWithType: DrawingCanvas.GetGraphics
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.GetGraphics
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetColour*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetColour
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_SetColour_System_Int32_System_Int32_System_Int32_
  name: SetColour
  nameWithType: DrawingCanvas.SetColour
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.SetColour
- uid: BOOSE.ICanvas.SetColour(System.Int32,System.Int32,System.Int32)
  commentId: M:BOOSE.ICanvas.SetColour(System.Int32,System.Int32,System.Int32)
  parent: BOOSE.ICanvas
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: SetColour(int, int, int)
  nameWithType: ICanvas.SetColour(int, int, int)
  fullName: BOOSE.ICanvas.SetColour(int, int, int)
  nameWithType.vb: ICanvas.SetColour(Integer, Integer, Integer)
  fullName.vb: BOOSE.ICanvas.SetColour(Integer, Integer, Integer)
  name.vb: SetColour(Integer, Integer, Integer)
  spec.csharp:
  - uid: BOOSE.ICanvas.SetColour(System.Int32,System.Int32,System.Int32)
    name: SetColour
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: BOOSE.ICanvas.SetColour(System.Int32,System.Int32,System.Int32)
    name: SetColour
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Tri*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Tri
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_Tri_System_Int32_System_Int32_
  name: Tri
  nameWithType: DrawingCanvas.Tri
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.Tri
- uid: BOOSE.ICanvas.Tri(System.Int32,System.Int32)
  commentId: M:BOOSE.ICanvas.Tri(System.Int32,System.Int32)
  parent: BOOSE.ICanvas
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Tri(int, int)
  nameWithType: ICanvas.Tri(int, int)
  fullName: BOOSE.ICanvas.Tri(int, int)
  nameWithType.vb: ICanvas.Tri(Integer, Integer)
  fullName.vb: BOOSE.ICanvas.Tri(Integer, Integer)
  name.vb: Tri(Integer, Integer)
  spec.csharp:
  - uid: BOOSE.ICanvas.Tri(System.Int32,System.Int32)
    name: Tri
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: BOOSE.ICanvas.Tri(System.Int32,System.Int32)
    name: Tri
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.WriteText*
  commentId: Overload:ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.WriteText
  href: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.html#ASE_Suyash_Silwal_77356849_MyApp_DrawingCanvas_WriteText_System_String_
  name: WriteText
  nameWithType: DrawingCanvas.WriteText
  fullName: ASE_Suyash_Silwal_77356849.MyApp.DrawingCanvas.WriteText
- uid: BOOSE.ICanvas.WriteText(System.String)
  commentId: M:BOOSE.ICanvas.WriteText(System.String)
  parent: BOOSE.ICanvas
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: WriteText(string)
  nameWithType: ICanvas.WriteText(string)
  fullName: BOOSE.ICanvas.WriteText(string)
  nameWithType.vb: ICanvas.WriteText(String)
  fullName.vb: BOOSE.ICanvas.WriteText(String)
  name.vb: WriteText(String)
  spec.csharp:
  - uid: BOOSE.ICanvas.WriteText(System.String)
    name: WriteText
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: BOOSE.ICanvas.WriteText(System.String)
    name: WriteText
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
